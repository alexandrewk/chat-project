#!env node

const axios = require('axios')
const app = require('../lib/app')
const config = {
  port: 3001
};

(async function() {
  await app.listen(config.port);
  await Promise.all([{
    name: 'Channel 1',
    messages: [{
      author: 'Jacques',
      creation: 1602831101929,
      content: `
      Hello
      `.replace(/^ {6}/gm,''),
    },{
      author: 'Charles',
      creation: 1602832138892,
      content: `
      Test message 1
      `.replace(/^ {6}/gm,''),
    },{
      author: 'Jacques',
      creation: 1602840139202,
      content: `
      Test message 2
      `.replace(/^ {6}/gm,''),
    },{
      author: 'Charles',
      creation: 1602844139200,
      content: `
      Test message 3
      `.replace(/^ {6}/gm,'').replace(/^ {6}/gm,''),
    }]
  },{
    name: 'Project',
    messages: [{
      author: 'Bob',
      creation: 1602223579200,
      content: `
      What's up
      `.replace(/^ {6}/gm,'')
    },{
      author: 'Bob',
      creation: 1602523579200,
      content: `
      ???
      `.replace(/^ {6}/gm,'')
    }]
  }].map( async (channel) => {
    const {data: {id}} = await axios.post(`http://localhost:${config.port}/channels`, {
      name: channel.name
    })
    return Promise.all( channel.messages.map( async (message) => {
      await axios.post(`http://localhost:${config.port}/channels/${id}/messages`, message)
    }))
  }))
  await Promise.all([{
        username: 'Bob',
        password: 'test',
        channels: ["1","2"],
        settings: 0,
  }].map( async (user) => {
            await axios.post(`http://localhost:${config.port}/users`, {
            username: user.username,
            password: user.password,
            channels: user.channels,
            settings: user.settings,
        })
  }))
  process.exit()
})();
